<?php

namespace App\Widgets;

/**
 *  |--------------------------------------------------------------------------
 *  |   You can use the below snippets to override the defaults.
 *  |====== Remove this doc block if you don't need it ========
 *  |--------------------------------------------------------------------------
 *  | public $contextAs = '$data'; (default : '$data')
 *  | public $controller = '\App\ClassPath\ُSomeClass@someMethod'; (optional)
 *  | public $presenter = \App\ClassPath\WidgetPresenter::class; (optional)
 *  | public $minifyOutput = true; (use it to override the default value in config file)
 *  | public $cacheTags = []; (optional) (Available for all cache driver)
 *  | public $cacheLifeTime = 0;   (use it to override the default value in config file)
 *  | public $cacheView = false; You may only cache the controller result. (default : true)
 *  | public $template; (optional) (By default it looks for the view file generated by artisan)
 *  |--------------------------------------------------------------------------
 */
class dbStatus
{
    public const DB_STATUS = [
        0 => "NOTCREATED",
        1 => "CREATED",
        2 => "CREATING",
    ];

    private function description($key)
    {
        return [
            "CREATED" => "ایجاد شده",
            "NOTCREATED" => "ایجاد نشده",
            "CREATING" => "در حال ایجاد",
        ][$key];
    }
    private function classType($key)
    {
        return [
            0 => "danger",
            1 => "success",
            2 => "warning",
        ][$key];
    }
    public function getDescription($key)
    {
        return $this->description($key);
    }


    public function getStatusDescription($key)
    {
        return [
            1=>"فعال",
            0=>"غیر فعال",
        ][$key];
    }

    public function getStatusClassType($value)
    {
        return[
            0=>"danger",
            1=>"success",
        ][$value];
    }

    public function getStatusTag($key)
    {
        // dd($key);
        return "<span class='badge badge-" . $this->getStatusClassType($key) . "'>" . $this->getStatusDescription($key) . "</span>";
    }


    public function getTag($key)
    {
        return "<span class='badge badge-" . $this->classType($key) . "'>" . $this->description(self::DB_STATUS[$key]) . "</span>";
    }
    public function data()
    {
        return [
            self::$dbStatus,
        ];
    }

    /**
     * If the widget output depends on query strings you should return key names.
     * otherwise you get undesired results out of the cache store. for example:
     * example.com/product?page=1 and you use the page number in your db query
     * or if you want it to be separated for each user: return auth()->id();
     */
    public function extraCacheKeyDependency($args)
    {
        return [/* request('page') */];
    }
}
